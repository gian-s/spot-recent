{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nconst spotifyApi = new SpotifyWebApi({\n  redirectUri: process.env.REACT_APP_REDIRECT_URI,\n  clientId: process.env.REACT_APP_CLIENT_ID,\n  clientSecret: process.env.REACT_APP_CLIENT_SECRET\n});\nexport default function Dashboard(_ref) {\n  _s();\n  let {\n    code\n  } = _ref;\n  const accessToken = useAuth(code);\n  const [playlists, setPlaylists] = useState([]);\n  //const [tracks, setTracks] = useState({});\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!accessToken) return;\n    (async () => {\n      const names = await getPlaylists();\n      const toRet = names.map(async item => {\n        const tmp = await allTracks(item.id);\n        return {\n          playlist_id: item.id,\n          playlist_name: item.name,\n          tracks: tmp\n        };\n      });\n      const total = await Promise.all(toRet);\n      //console.log(total);\n      //setPlaylists(names);\n      setPlaylists(total);\n    })();\n\n    //memory address of where the array should be stored\n    //ASYNC AWAIT\n    //.then only returns when something is\n    //once it gets a result then\n  }, []);\n\n  //console.log(playlists);\n\n  return null;\n}\n_s(Dashboard, \"7zJmTZZqALEQ3MRMUA19UAc6DgA=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","useAuth","SpotifyWebApi","spotifyApi","redirectUri","process","env","REACT_APP_REDIRECT_URI","clientId","REACT_APP_CLIENT_ID","clientSecret","REACT_APP_CLIENT_SECRET","Dashboard","code","accessToken","playlists","setPlaylists","setAccessToken","names","getPlaylists","toRet","map","item","tmp","allTracks","id","playlist_id","playlist_name","name","tracks","total","Promise","all"],"sources":["/home/gianca/Projects/spot-recent/app/src/Dashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nconst spotifyApi = new SpotifyWebApi({\n  redirectUri: process.env.REACT_APP_REDIRECT_URI,\n  clientId: process.env.REACT_APP_CLIENT_ID,\n  clientSecret: process.env.REACT_APP_CLIENT_SECRET,\n});\n\nexport default function Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [playlists, setPlaylists] = useState([]);\n  //const [tracks, setTracks] = useState({});\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n\n    (async () => {\n      const names = await getPlaylists();\n      const toRet = names.map(async (item) => {\n        const tmp = await allTracks(item.id);\n        return {\n          playlist_id: item.id,\n          playlist_name: item.name,\n          tracks: tmp,\n        };\n      });\n\n      const total = await Promise.all(toRet);\n      //console.log(total);\n      //setPlaylists(names);\n      setPlaylists(total);\n    })();\n\n    //memory address of where the array should be stored\n    //ASYNC AWAIT\n    //.then only returns when something is\n    //once it gets a result then\n  }, []);\n\n  //console.log(playlists);\n\n  return null;\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,sBAAsB;AAEhD,MAAMC,UAAU,GAAG,IAAID,aAAa,CAAC;EACnCE,WAAW,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC/CC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG,mBAAmB;EACzCC,YAAY,EAAEL,OAAO,CAACC,GAAG,CAACK;AAC5B,CAAC,CAAC;AAEF,eAAe,SAASC,SAAS,OAAW;EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC;EACxC,MAAMC,WAAW,GAAGb,OAAO,CAACY,IAAI,CAAC;EACjC,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C;;EAEAC,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,WAAW,EAAE;IAClBX,UAAU,CAACc,cAAc,CAACH,WAAW,CAAC;EACxC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBd,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,WAAW,EAAE;IAElB,CAAC,YAAY;MACX,MAAMI,KAAK,GAAG,MAAMC,YAAY,EAAE;MAClC,MAAMC,KAAK,GAAGF,KAAK,CAACG,GAAG,CAAC,MAAOC,IAAI,IAAK;QACtC,MAAMC,GAAG,GAAG,MAAMC,SAAS,CAACF,IAAI,CAACG,EAAE,CAAC;QACpC,OAAO;UACLC,WAAW,EAAEJ,IAAI,CAACG,EAAE;UACpBE,aAAa,EAAEL,IAAI,CAACM,IAAI;UACxBC,MAAM,EAAEN;QACV,CAAC;MACH,CAAC,CAAC;MAEF,MAAMO,KAAK,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;MACtC;MACA;MACAJ,YAAY,CAACc,KAAK,CAAC;IACrB,CAAC,GAAG;;IAEJ;IACA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,OAAO,IAAI;AACb;AAAC,GAvCuBlB,SAAS;EAAA,QACXX,OAAO;AAAA;AAAA,KADLW,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}