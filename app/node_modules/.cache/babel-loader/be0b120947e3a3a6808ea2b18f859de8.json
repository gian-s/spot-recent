{"ast":null,"code":"var _jsxFileName = \"/home/gianca/Projects/spot-recent/app/src/CollapsibleTable.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Dashboard from \"./Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createData(playlist_id, playlist_name) {\n  return {\n    playlist_id,\n    playlist_name,\n    tracks: []\n  };\n}\nfunction Row(props) {\n  _s();\n  const {\n    row\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      sx: {\n        \"& > *\": {\n          borderBottom: \"unset\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: row.playlist_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: row.playlist_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              margin: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"Tracks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"tracks\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"id\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"left\",\n                    children: \"Track Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: row.tracks.map(tracksRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: tracksRow.track_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: tracksRow.track_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this)]\n                }, tracksRow.track_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c = Row;\nRow.propTypes = {\n  row: PropTypes.shape({\n    playlist_id: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(PropTypes.shape({\n      track_id: PropTypes.number.isRequired,\n      track_name: PropTypes.string.isRequired\n    })).isRequired,\n    playlist_name: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default function CollapsibleTable(_ref) {\n  let {\n    code\n  } = _ref;\n  const rows = Dashboard(code);\n  console.log(rows);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Playlist ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(Row, {\n          row: row\n        }, row.playlist_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CollapsibleTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"CollapsibleTable\");","map":{"version":3,"names":["React","PropTypes","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Dashboard","createData","playlist_id","playlist_name","tracks","Row","props","row","open","setOpen","useState","borderBottom","paddingBottom","paddingTop","margin","map","tracksRow","track_id","track_name","propTypes","shape","number","isRequired","history","arrayOf","string","CollapsibleTable","code","rows","console","log"],"sources":["/home/gianca/Projects/spot-recent/app/src/CollapsibleTable.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Dashboard from \"./Dashboard\";\n\nfunction createData(playlist_id, playlist_name) {\n  return {\n    playlist_id,\n    playlist_name,\n    tracks: [],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.playlist_id}\n        </TableCell>\n        <TableCell>{row.playlist_name}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Tracks\n              </Typography>\n              <Table size=\"small\" aria-label=\"tracks\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">id</TableCell>\n                    <TableCell align=\"left\">Track Name</TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {row.tracks.map((tracksRow) => (\n                    <TableRow key={tracksRow.track_id}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {tracksRow.track_id}\n                      </TableCell>\n                      <TableCell>{tracksRow.track_name}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    playlist_id: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        track_id: PropTypes.number.isRequired,\n        track_name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    playlist_name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default function CollapsibleTable({ code }) {\n  const rows = Dashboard(code);\n  console.log(rows);\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Playlist ID</TableCell>\n            <TableCell>Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <Row key={row.playlist_name} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}