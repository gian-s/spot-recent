[{"/home/gianca/Projects/spot-dj/app/src/index.js":"1","/home/gianca/Projects/spot-dj/app/src/App.js":"2","/home/gianca/Projects/spot-dj/app/src/Login.js":"3","/home/gianca/Projects/spot-dj/app/src/Dashboard.js":"4","/home/gianca/Projects/spot-dj/app/src/CollapsibleTable.js":"5","/home/gianca/Projects/spot-dj/app/src/useAuth.js":"6","/home/gianca/Projects/spot-recent/app/src/index.js":"7","/home/gianca/Projects/spot-recent/app/src/App.js":"8","/home/gianca/Projects/spot-recent/app/src/Login.js":"9","/home/gianca/Projects/spot-recent/app/src/Dashboard.js":"10","/home/gianca/Projects/spot-recent/app/src/useAuth.js":"11"},{"size":412,"mtime":1669175076535,"results":"12","hashOfConfig":"13"},{"size":339,"mtime":1669175076535,"results":"14","hashOfConfig":"13"},{"size":491,"mtime":1669175076535,"results":"15","hashOfConfig":"13"},{"size":2815,"mtime":1670102031296,"results":"16","hashOfConfig":"13"},{"size":3612,"mtime":1669175076535,"results":"17","hashOfConfig":"13"},{"size":1293,"mtime":1669175076535,"results":"18","hashOfConfig":"13"},{"size":412,"mtime":1670612047906,"results":"19","hashOfConfig":"20"},{"size":334,"mtime":1670612047906,"results":"21","hashOfConfig":"20"},{"size":491,"mtime":1670612047906,"results":"22","hashOfConfig":"20"},{"size":735,"mtime":1670869236616,"results":"23","hashOfConfig":"20"},{"size":1295,"mtime":1670612047906,"results":"24","hashOfConfig":"20"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ehy6us",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"ioy9vz",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/home/gianca/Projects/spot-dj/app/src/index.js",[],[],[],"/home/gianca/Projects/spot-dj/app/src/App.js",["62"],[],"import Login from \"./Login\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Dashboard from \"./Dashboard\";\nimport CollapsibleTable from \"./CollapsibleTable\";\n\nconst code = new URLSearchParams(window.location.search).get(\"code\");\n\nfunction App() {\n  //\n  return code ? <CollapsibleTable code={code} /> : <Login />;\n}\n\nexport default App;\n","/home/gianca/Projects/spot-dj/app/src/Login.js",[],[],"/home/gianca/Projects/spot-dj/app/src/Dashboard.js",[],[],"/home/gianca/Projects/spot-dj/app/src/CollapsibleTable.js",["63"],[],"import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Dashboard from \"./Dashboard\";\n\nfunction createData(playlist_id, playlist_name) {\n  return {\n    playlist_id,\n    playlist_name,\n    tracks: [],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.playlist_id}\n        </TableCell>\n        <TableCell>{row.playlist_name}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Tracks\n              </Typography>\n              <Table size=\"small\" aria-label=\"tracks\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">id</TableCell>\n                    <TableCell align=\"left\">Track Name</TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {row.tracks.map((tracksRow) => (\n                    <TableRow key={tracksRow.track_id}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {tracksRow.track_id}\n                      </TableCell>\n                      <TableCell>{tracksRow.track_name}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    playlist_id: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        track_id: PropTypes.number.isRequired,\n        track_name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    playlist_name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default function CollapsibleTable({ code }) {\n  const rows = Dashboard(code);\n  console.log(rows);\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Playlist ID</TableCell>\n            <TableCell>Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <Row key={row.playlist_name} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/home/gianca/Projects/spot-dj/app/src/useAuth.js",[],[],"/home/gianca/Projects/spot-recent/app/src/index.js",[],[],[],"/home/gianca/Projects/spot-recent/app/src/App.js",[],[],"/home/gianca/Projects/spot-recent/app/src/Login.js",[],[],"/home/gianca/Projects/spot-recent/app/src/Dashboard.js",["64"],[],"/home/gianca/Projects/spot-recent/app/src/useAuth.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":18,"column":10,"nodeType":"67","messageId":"68","endLine":18,"endColumn":20},{"ruleId":"65","severity":1,"message":"70","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":18},"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'createData' is defined but never used.","'useState' is defined but never used."]