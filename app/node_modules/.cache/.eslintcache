[{"/home/gianca/Projects/spot-dj/app/src/index.js":"1","/home/gianca/Projects/spot-dj/app/src/App.js":"2","/home/gianca/Projects/spot-dj/app/src/Login.js":"3","/home/gianca/Projects/spot-dj/app/src/Dashboard.js":"4","/home/gianca/Projects/spot-dj/app/src/CollapsibleTable.js":"5","/home/gianca/Projects/spot-dj/app/src/useAuth.js":"6","/home/gianca/Projects/spot-recent/app/src/index.js":"7","/home/gianca/Projects/spot-recent/app/src/App.js":"8","/home/gianca/Projects/spot-recent/app/src/Login.js":"9","/home/gianca/Projects/spot-recent/app/src/Dashboard.js":"10","/home/gianca/Projects/spot-recent/app/src/CollapsibleTable.js":"11","/home/gianca/Projects/spot-recent/app/src/useAuth.js":"12"},{"size":412,"mtime":1669175076535,"results":"13","hashOfConfig":"14"},{"size":339,"mtime":1669175076535,"results":"15","hashOfConfig":"14"},{"size":491,"mtime":1669175076535,"results":"16","hashOfConfig":"14"},{"size":2815,"mtime":1670102031296,"results":"17","hashOfConfig":"14"},{"size":3612,"mtime":1669175076535,"results":"18","hashOfConfig":"14"},{"size":1293,"mtime":1669175076535,"results":"19","hashOfConfig":"14"},{"size":412,"mtime":1670462040934,"results":"20","hashOfConfig":"21"},{"size":334,"mtime":1670465276524,"results":"22","hashOfConfig":"21"},{"size":491,"mtime":1670462040934,"results":"23","hashOfConfig":"21"},{"size":717,"mtime":1670466875494,"results":"24","hashOfConfig":"21"},{"size":3612,"mtime":1670462040934,"results":"25","hashOfConfig":"21"},{"size":1295,"mtime":1670466879404,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ehy6us",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"fil611",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gianca/Projects/spot-dj/app/src/index.js",[],[],[],"/home/gianca/Projects/spot-dj/app/src/App.js",["68"],[],"import Login from \"./Login\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Dashboard from \"./Dashboard\";\nimport CollapsibleTable from \"./CollapsibleTable\";\n\nconst code = new URLSearchParams(window.location.search).get(\"code\");\n\nfunction App() {\n  //\n  return code ? <CollapsibleTable code={code} /> : <Login />;\n}\n\nexport default App;\n","/home/gianca/Projects/spot-dj/app/src/Login.js",[],[],"/home/gianca/Projects/spot-dj/app/src/Dashboard.js",[],[],"/home/gianca/Projects/spot-dj/app/src/CollapsibleTable.js",["69"],[],"import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"@mui/material/Box\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Dashboard from \"./Dashboard\";\n\nfunction createData(playlist_id, playlist_name) {\n  return {\n    playlist_id,\n    playlist_name,\n    tracks: [],\n  };\n}\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ \"& > *\": { borderBottom: \"unset\" } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.playlist_id}\n        </TableCell>\n        <TableCell>{row.playlist_name}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Tracks\n              </Typography>\n              <Table size=\"small\" aria-label=\"tracks\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">id</TableCell>\n                    <TableCell align=\"left\">Track Name</TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {row.tracks.map((tracksRow) => (\n                    <TableRow key={tracksRow.track_id}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {tracksRow.track_id}\n                      </TableCell>\n                      <TableCell>{tracksRow.track_name}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nRow.propTypes = {\n  row: PropTypes.shape({\n    playlist_id: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(\n      PropTypes.shape({\n        track_id: PropTypes.number.isRequired,\n        track_name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    playlist_name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default function CollapsibleTable({ code }) {\n  const rows = Dashboard(code);\n  console.log(rows);\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>Playlist ID</TableCell>\n            <TableCell>Name</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <Row key={row.playlist_name} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/home/gianca/Projects/spot-dj/app/src/useAuth.js",[],[],"/home/gianca/Projects/spot-recent/app/src/index.js",[],[],[],"/home/gianca/Projects/spot-recent/app/src/App.js",[],[],"/home/gianca/Projects/spot-recent/app/src/Login.js",[],[],"/home/gianca/Projects/spot-recent/app/src/Dashboard.js",["70"],[],"import { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nconst spotifyApi = new SpotifyWebApi({\n  redirectUri: process.env.REACT_APP_REDIRECT_URI,\n  clientId: process.env.REACT_APP_CLIENT_ID,\n  clientSecret: process.env.REACT_APP_CLIENT_SECRET,\n});\n\nexport default function Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  //const [playlists, setPlaylists] = useState([]);\n  //const [tracks, setTracks] = useState({});\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  //console.log(playlists);\n\n  return (\n    <div>\n      <h1>{accessToken}</h1>\n    </div>\n  );\n}\n","/home/gianca/Projects/spot-recent/app/src/CollapsibleTable.js",["71"],[],"/home/gianca/Projects/spot-recent/app/src/useAuth.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":17},{"ruleId":"72","severity":1,"message":"76","line":18,"column":10,"nodeType":"74","messageId":"75","endLine":18,"endColumn":20},{"ruleId":"72","severity":1,"message":"77","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":18,"column":10,"nodeType":"74","messageId":"75","endLine":18,"endColumn":20},"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'createData' is defined but never used.","'useState' is defined but never used."]